{"version":3,"sources":["components/UiRestriction.js","layout/layout.js","router/PrivateRoute.jsx","Routes.js","App.js","serviceWorker.js","index.js","config/config.js","config/constants.js","contexts/UserContext.js","hoc/UseContext.js"],"names":["UiRestriction","name","link","requireLogin","requireAdmin","hidden","children","Consumer","userInfo","isAdmin","Header","Layout","Content","Footer","layoutConfig","MainLayout","onMenuItemClick","key","logOut","props","history","push","this","location","style","position","zIndex","width","className","theme","mode","defaultSelectedKeys","pathname","onClick","map","config","Item","padding","marginTop","textAlign","React","Component","withRouter","UseContext","UserContext","component","rest","render","to","state","from","Login","lazy","LandingPage","AlternatorListing","AddAlternator","renderLoader","exact","path","fallback","App","Routes","Boolean","window","hostname","match","createBrowserHistory","ReactDOM","console","log","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","envVars","process","Object","freeze","url","REACT_APP_SERVICE_URL","cloudinaryUrl","REACT_APP_CLOUDINARY_URL","cloudinaryuploadPreset","REACT_APP_CLOUDINARY_UPLOAD_PRESET","landingPageCarousel","userApi","login","verify","alternatorApi","list","add","update","delete","altDisAssebly","createContext","UserDetailsContext","credentials","a","axios","post","data","token","localStorage","setItem","setState","clearSession","removeItem","undefined","getUserToken","getItem","validateLogin","get","getAuthHeader","headers","Authorization","err","Provider","value","useContext","Context","WrappedComponent"],"mappings":"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","file":"static/js/main.889b5bcc.chunk.js","sourcesContent":["import React from 'react';\nimport { UserContext } from '../contexts';\n\nexport const UiRestriction = ({ name, link, requireLogin = false, requireAdmin = false, hidden = false, children, ...rest }) => (\n  <UserContext.Consumer>\n    {({ userInfo }) => {\n      if (!userInfo) {\n        if (requireLogin || requireAdmin) {\n          return <></>;\n        }\n        return <>{children}</>;\n      } else {\n        if ((requireAdmin && !userInfo.isAdmin) || hidden) {\n          return (<></>)\n        }\n\n        return <>{children}</>;\n      }\n    }}\n  </UserContext.Consumer>\n)","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { UiRestriction } from '../components';\nimport { UseContext } from '../hoc';\nimport { UserContext } from '../contexts';\n\nconst { Header, Content, Footer } = Layout;\nconst layoutConfig = [\n  {\n    name: 'Home',\n    link: '/',\n  }, {\n    name: 'Alternaors',\n    link: '/alternators',\n  }, {\n    name: 'Spare Parts',\n    link: '/spare'\n  }, {\n    name: 'Login',\n    link: '/login',\n    hidden: true\n  }, {\n    name: 'Logout',\n    link: '/logout',\n    requireLogin: true,\n  }\n]\n\nclass MainLayout extends React.Component {\n  onMenuItemClick = ({ key }) => {\n    if (key === '/logout') {\n      const { logOut } = this.props;\n      logOut()\n    } else {\n      const { history } = this.props;\n      history.push(key);\n    }\n  }\n\n  render() {\n    const { children, location } = this.props;\n    return (\n      <Layout>\n        <Header style={{ position: 'fixed', zIndex: 3, width: '100%' }}>\n          <div className=\"logo\" />\n          <Menu \n            theme=\"dark\" \n            mode=\"horizontal\" \n            defaultSelectedKeys={[location.pathname]}\n            onClick={this.onMenuItemClick}\n          >\n            {layoutConfig.map(config =>\n              <Menu.Item key={config.link}><UiRestriction {...config}>{config.name}</UiRestriction></Menu.Item>\n            )}\n          </Menu>\n        </Header>\n        <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n          {/* <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb> */}\n          <div className=\"site-layout-background\" style={{ padding: 24 }}>\n            {children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(UseContext(UserContext)(MainLayout));","import React from \"react\";\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport { UserContext } from '../contexts';\n\nexport const PrivateRoute = ({ component: Component, location, ...rest }) => (\n  <UserContext.Consumer>\n    {({ userInfo }) => (\n      <Route\n        {...rest}\n        render={\n          props => userInfo ? (\n            <Component {...props} />\n          ) : (\n              <Redirect\n                to={{\n                  pathname: `/login`,\n                  state: { from: props.location.pathname }\n                }}\n              />\n            )\n        }\n      />\n    )}\n  </UserContext.Consumer>\n)\n\nexport default withRouter(PrivateRoute);","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { PrivateRoute } from './router';\nconst Login = lazy(() => import('./pages/login'));\nconst LandingPage = lazy(() => import('./pages/landingPage'));\nconst AlternatorListing = lazy(() => import('./pages/alternatorListing'));\nconst AddAlternator = lazy(() => import('./pages/addAlternator'));\n\nconst renderLoader = () => <p>Loading</p>;\n\nexport default () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      render={props => <Suspense fallback={renderLoader()}><LandingPage {...props} /></Suspense>}\n    />\n    <Route\n      exact\n      path=\"/login\"\n      render={props => <Suspense fallback={renderLoader()}><Login {...props} /></Suspense>}\n    />\n    <Route\n      exact\n      path=\"/alternators\"\n      render={props => <Suspense fallback={renderLoader()}><AlternatorListing {...props} /></Suspense>}\n    />\n    <PrivateRoute \n      exact\n      path=\"/alternators/add\"\n      render={props => <Suspense fallback={renderLoader()}><AddAlternator {...props} /></Suspense>}\n    />\n    <Redirect to=\"/\"/>\n  </Switch>\n)","import React from 'react';\nimport { UserDetails } from './contexts';\nimport Layout from './layout';\nimport './App.css';\n\nimport Routes from './Routes'\n\nconst App = () => (\n  <UserDetails>\n    <Layout>\n      <Routes />\n    </Layout>\n  </UserDetails>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router'\nimport { createBrowserHistory } from 'history';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    {console.log(\":Dadad\")}\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const envVars = process.env;\n\nexport default Object.freeze({\n  url: `${envVars.REACT_APP_SERVICE_URL}/api/`,\n  cloudinaryUrl: envVars.REACT_APP_CLOUDINARY_URL,\n  cloudinaryuploadPreset: envVars.REACT_APP_CLOUDINARY_UPLOAD_PRESET,\n})","import config from './config';\nexport const landingPageCarousel = [\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655768/grover/ALT_START3_lnkt6a.jpg',\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655768/grover/ALT_MID32_owefp2.jpg',\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655767/grover/ALT_FIN33_xgx10s.jpg',\n]\n\nexport const userApi = {\n  login: `${config.url}user/login`,\n  verify: `${config.url}user/verify`,\n}\n\nexport const alternatorApi = {\n  list: `${config.url}alternator/list`,\n  add: `${config.url}alternator/add`,\n  update: `${config.url}alternator/update/`,\n  delete: `${config.url}alternator/`,\n}\n\nexport const altDisAssebly = 'https://res.cloudinary.com/mhtdang/image/upload/v1587655767/grover/Alternator_Cut_Away_EDIT_lr2_pdmw2k.jpg'","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { userApi } from '../config';\n\nconst UserContext = React.createContext({});\n\nclass UserDetailsContext extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: undefined\n    }\n  }\n\n  componentDidMount() {\n    this.validateLogin();\n  }\n\n  login = async (credentials) => {\n    try {\n      let { data: { token, userInfo } } = await axios.post(userApi.login, credentials);\n      localStorage.setItem('user-token', token);\n      this.setState({ userInfo });\n    } catch (err) {\n      if (err.message === 'Request failed with status code 401') {\n        this.clearSession();\n      }\n    }\n  }\n\n  clearSession = () => {\n    localStorage.removeItem('user-token');\n    this.setState({ userInfo: undefined });\n  }\n\n  getUserToken = () => {\n    return localStorage.getItem('user-token') || '';\n  }\n\n  validateLogin = async () => {\n    try {\n      if (this.getUserToken()) {\n        let { data: userInfo } = await axios.get(userApi.verify, this.getAuthHeader());\n        console.log(\":::::\", userInfo)\n        this.setState({ userInfo })\n      }\n    } catch (err) {\n      if (err.message === 'Request failed with status code 401') {\n        this.clearSession();\n      }\n    }\n  }\n\n  getAuthHeader = () => {\n    return { headers: { Authorization: 'Bearer ' + this.getUserToken() } };\n  }\n\n  logOut = async () => {\n    try {\n      // await axios.post(config.url + 'logout', {}, this.getUserToken());\n      this.clearSession();\n    } catch (err) {\n      // TODO: Think of something\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { login, logOut, getAuthHeader } = this;\n    const { userInfo } = this.state;\n    return (\n      <UserContext.Provider value={{\n        login,\n        logOut,\n        getAuthHeader,\n        userInfo\n      }}>\n        {children}\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport default UserDetailsContext;\nexport { UserContext }","import React from 'react';\n\nconst useContext = Context => WrappedComponent => props => (\n  <Context.Consumer>\n    {(value) => (\n      <WrappedComponent {...props} {...value} />\n    )}\n  </Context.Consumer>\n)\n\nexport default useContext;"],"sourceRoot":""}