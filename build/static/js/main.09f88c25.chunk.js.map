{"version":3,"sources":["hoc/UseContext.js","contexts/UserContext.js","layout/layout.js","router/PrivateRoute.jsx","Routes.js","App.js","serviceWorker.js","index.js","config/config.js","config/constants.js","components/UiRestriction.js","components/InquiryForm.js"],"names":["useContext","Context","WrappedComponent","props","Consumer","value","UserContext","React","createContext","UserDetails","login","credentials","a","axios","post","userApi","data","token","userInfo","localStorage","setItem","setState","message","clearSession","removeItem","undefined","getUserToken","getItem","validateLogin","get","verify","getAuthHeader","headers","Authorization","logOut","err","state","this","children","Provider","Component","Header","Layout","Content","Footer","SubMenu","Menu","Item","layoutConfig","name","link","hidden","requireLogin","subMenu","profileMenuConfig","MainLayout","onMenuItemClick","key","history","push","renderProfileMenu","title","style","backgroundColor","verticalAlign","size","charAt","disabled","map","config","location","position","zIndex","width","className","theme","mode","defaultSelectedKeys","pathname","onClick","marginTop","padding","textAlign","withRouter","UseContext","component","rest","to","from","Login","lazy","LandingPage","AlternatorListing","AddAlternator","AdminDashboard","ResetPassword","AlternatorView","renderLoader","exact","path","render","fallback","App","Routes","Boolean","window","hostname","match","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","envVars","process","Object","freeze","url","NODE_ENV","origin","REACT_APP_SERVICE_URL","cloudinaryUrl","REACT_APP_CLOUDINARY_URL","cloudinaryuploadPreset","REACT_APP_CLOUDINARY_UPLOAD_PRESET","landingPageCarousel","create","resetPassword","list","delete","alternatorApi","add","update","notificationApi","altDisAssebly","UiRestriction","requireAdmin","clonedChildren","Children","child","cloneElement","isAdmin","InquiryForm","showDrawer","visible","onClose","e","onSubmit","formRef","current","resetFields","createRef","bottom","right","placement","QuestionCircleTwoTone","fontSize","bodyStyle","paddingBottom","layout","hideRequiredMark","onFinish","ref","gutter","span","label","rules","required","placeholder","type","TextArea","rows","htmlType","marginRight"],"mappings":"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","file":"static/js/main.09f88c25.chunk.js","sourcesContent":["import React from 'react';\n\nconst useContext = Context => WrappedComponent => props => (\n  <Context.Consumer>\n    {(value) => (\n      <WrappedComponent {...props} {...value} />\n    )}\n  </Context.Consumer>\n)\n\nexport default useContext;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { userApi } from '../config';\n\nconst UserContext = React.createContext({});\n\nclass UserDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: undefined\n    }\n  }\n\n  componentDidMount() {\n    this.validateLogin();\n  }\n\n  login = async (credentials) => {\n    try {\n      let { data: { token, userInfo } } = await axios.post(userApi.login, credentials);\n      localStorage.setItem('user-token', token);\n      this.setState({ userInfo });\n    } catch (err) {\n      if (err.message === 'Request failed with status code 401') {\n        this.clearSession();\n      }\n    }\n  }\n\n  clearSession = () => {\n    localStorage.removeItem('user-token');\n    this.setState({ userInfo: undefined });\n  }\n\n  getUserToken = () => {\n    return localStorage.getItem('user-token') || '';\n  }\n\n  validateLogin = async () => {\n    try {\n      if (this.getUserToken()) {\n        let { data: userInfo } = await axios.get(userApi.verify, this.getAuthHeader());\n        this.setState({ userInfo })\n      }\n    } catch (err) {\n      if (err.message === 'Request failed with status code 401') {\n        this.clearSession();\n      }\n    }\n  }\n\n  getAuthHeader = () => {\n    return { headers: { Authorization: 'Bearer ' + this.getUserToken() } };\n  }\n\n  logOut = async () => {\n    try {\n      // await axios.post(config.url + 'logout', {}, this.getUserToken());\n      this.clearSession();\n    } catch (err) {\n      // TODO: Think of something\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { login, logOut, getAuthHeader } = this;\n    const { userInfo } = this.state;\n    return (\n      <UserContext.Provider value={{\n        login,\n        logOut,\n        getAuthHeader,\n        userInfo\n      }}>\n        {children}\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport { UserContext, UserDetails };","import React from 'react';\nimport { Layout, Menu, Avatar } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { UiRestriction, InquiryForm } from '../components';\nimport { UseContext } from '../hoc';\nimport { UserContext } from '../contexts';\n\nconst { Header, Content, Footer } = Layout,\n  { SubMenu, Item } = Menu;\n\nconst layoutConfig = [\n  {\n    name: 'Home',\n    link: '/',\n  }, {\n    name: 'Alternaors',\n    link: '/alternators',\n  }, {\n    //   name: 'Spare Parts',\n    //   link: '/spare'\n    // }, {\n    name: 'Login',\n    link: '/login',\n    hidden: true\n  }, {\n    name: 'Profile',\n    link: '/profile',\n    requireLogin: true,\n    subMenu: 'renderProfileMenu'\n  }\n]\n\nconst profileMenuConfig = [\n  {\n    name: 'Reset Password',\n    link: '/password/reset',\n  }, {\n    name: 'Admin Panel',\n    link: '/admin',\n  }, {\n    name: 'Logout',\n    link: '/logout',\n  },\n]\n\nclass MainLayout extends React.Component {\n  onMenuItemClick = ({ key }) => {\n    if (key === '/logout') {\n      const { logOut } = this.props;\n      logOut()\n    } else {\n    const { history } = this.props;\n    history.push(key);\n    }\n  }\n\n  renderProfileMenu = () => {\n    const { userInfo } = this.props;\n    if (userInfo) {\n      const { name } = userInfo;\n      return (\n        <SubMenu\n          title={\n            <>\n              <Avatar style={{ backgroundColor: '#7265e6', verticalAlign: 'middle' }} size=\"large\">\n                {name.charAt(0)}\n              </Avatar>\n            </>\n          }\n        >\n          <Item disabled>\n            {`Hi ${name}`}\n          </Item>\n          {profileMenuConfig.map(config => (\n            <UiRestriction key={config.link} {...config}>\n              <Item>{config.name}</Item>\n            </UiRestriction>\n          ))}\n        </SubMenu>\n      )\n    }\n    return <></>;\n  }\n\n  render() {\n    const { children, location } = this.props;\n    return (\n      <Layout>\n        <Header style={{ position: 'fixed', zIndex: 3, width: '100%' }}>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[location.pathname]}\n            onClick={this.onMenuItemClick}\n          >\n            {layoutConfig.map(config =>\n              <UiRestriction key={config.link} {...config}>\n                {config.subMenu ? this[config.subMenu]() : <Item>{config.name}</Item>}\n              </UiRestriction>\n            )}\n          </Menu>\n        </Header>\n        <Content className=\"site-layout\" style={{ marginTop: 64 }}>\n          <div className=\"site-layout-background\" style={{ padding: 24 }}>\n            {children}\n          </div>\n        </Content>\n        <UiRestriction hidden >\n          <InquiryForm />\n        </UiRestriction>\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(UseContext(UserContext)(MainLayout));","import React from \"react\";\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport { UserContext } from '../contexts';\n\nexport const PrivateRoute = ({ component, location, ...rest }) => (\n  <UserContext.Consumer>\n    {({ userInfo }) => (\n      <>\n        {\n          userInfo ? (\n            <Route\n              {...rest}\n              component={component}\n            />\n          ) : (\n              <Redirect\n                to={{\n                  pathname: '/login',\n                  state: { from: location.pathname }\n                }}\n              />\n            )}\n      </>\n    )}\n  </UserContext.Consumer>\n)\n\nexport default withRouter(PrivateRoute);","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { PrivateRoute } from './router';\nconst Login = lazy(() => import('./pages/login'));\nconst LandingPage = lazy(() => import('./pages/landingPage'));\nconst AlternatorListing = lazy(() => import('./pages/alternatorListing'));\nconst AddAlternator = lazy(() => import('./pages/addAlternator'));\nconst AdminDashboard = lazy(() => import('./pages/admin'));\nconst ResetPassword = lazy(() => import('./pages/resetPassword'));\nconst AlternatorView = lazy(() => import('./pages/alternatorView'));\n\nconst renderLoader = () => <p>Loading</p>;\n\nexport default () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      render={props => <Suspense fallback={renderLoader()}><LandingPage {...props} /></Suspense>}\n    />\n    <Route\n      exact\n      path=\"/login\"\n      render={props => <Suspense fallback={renderLoader()}><Login {...props} /></Suspense>}\n    />\n    <Route\n      exact\n      path=\"/alternators\"\n      render={props => <Suspense fallback={renderLoader()}><AlternatorListing {...props} /></Suspense>}\n    />\n    <Route\n      path=\"/alternator/:id\"\n      render={props => <Suspense fallback={renderLoader()}><AlternatorView {...props} /></Suspense>}\n    />\n    <PrivateRoute \n      exact\n      path=\"/alternators/add\"\n      render={props => <Suspense fallback={renderLoader()}><AddAlternator {...props} /></Suspense>}\n    />\n    <PrivateRoute \n      exact\n      path=\"/admin\"\n      render={props => <Suspense fallback={renderLoader()}><AdminDashboard {...props} /></Suspense>}\n    />\n    <PrivateRoute \n      exact\n      path=\"/password/reset\"\n      render={props => <Suspense fallback={renderLoader()}><ResetPassword {...props} /></Suspense>}\n    />\n    <Redirect to=\"/\"/>\n  </Switch>\n)","import React from 'react';\nimport { UserDetails } from './contexts';\nimport Layout from './layout';\nimport './App.css';\n\nimport Routes from './Routes'\n\nconst App = () => (\n  <UserDetails>\n    <Layout>\n      <Routes />\n    </Layout>\n  </UserDetails>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router'\nimport { createBrowserHistory } from 'history';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const envVars = process.env;\n\nexport default Object.freeze({\n  url: `${envVars.NODE_ENV === 'production' ? window.location.origin : envVars.REACT_APP_SERVICE_URL}/api/`,\n  cloudinaryUrl: envVars.REACT_APP_CLOUDINARY_URL,\n  cloudinaryuploadPreset: envVars.REACT_APP_CLOUDINARY_UPLOAD_PRESET,\n})","import config from './config';\nexport const landingPageCarousel = [\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655768/grover/ALT_START3_lnkt6a.jpg',\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655768/grover/ALT_MID32_owefp2.jpg',\n  'https://res.cloudinary.com/mhtdang/image/upload/v1587655767/grover/ALT_FIN33_xgx10s.jpg',\n]\n\nexport const userApi = {\n  login: `${config.url}user/login`,\n  verify: `${config.url}user/verify`,\n  create: `${config.url}user/create`,\n  resetPassword: `${config.url}user/reset`,\n  list: `${config.url}user/list`,\n  delete: `${config.url}user`,\n}\n\nexport const alternatorApi = {\n  get: `${config.url}alternator`,\n  list: `${config.url}alternator/list`,\n  add: `${config.url}alternator/add`,\n  update: `${config.url}alternator/update/`,\n  delete: `${config.url}alternator/`,\n}\n\nexport const notificationApi = {\n  list: `${config.url}notification/list`,\n  add: `${config.url}notification/create`,\n  update: `${config.url}notification/update/`,\n  delete: `${config.url}notification/`,\n}\n\nexport const altDisAssebly = 'https://res.cloudinary.com/mhtdang/image/upload/v1587655767/grover/Alternator_Cut_Away_EDIT_lr2_pdmw2k.jpg'","import React from 'react';\nimport { UserContext } from '../contexts';\n\nexport const UiRestriction = ({ name, link, requireLogin = false, requireAdmin = false, hidden = false, children, ...rest }) => (\n  <UserContext.Consumer>\n    {({ userInfo }) => {\n      let clonedChildren = React.Children.map(children, child => React.cloneElement(child, rest)) ;\n      if (!userInfo) {\n        if (requireLogin || requireAdmin) {\n          return <></>;\n        }\n        return <>{clonedChildren}</>;\n      } else {\n        if (hidden || (requireAdmin && !userInfo.isAdmin)) {\n          return (<></>)\n        }\n        return <>{clonedChildren}</>\n      }\n    }}\n  </UserContext.Consumer>\n)","import React from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Affix, Tooltip } from 'antd';\nimport axios from 'axios';\nimport { QuestionCircleTwoTone } from '@ant-design/icons';\n\nimport { notificationApi } from '../config'\n\nclass InquiryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: false };\n    this.formRef = React.createRef();\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  onSubmit = async data => {\n    const res = await axios.post(notificationApi.add, data);\n    this.formRef.current.resetFields()\n    this.onClose();\n  }\n\n  render() {\n    return (\n      <div>\n        <Affix style={{ position: 'fixed', bottom: '30px', right: '20px' }} >\n          <Tooltip title=\"Have some Query?\" placement=\"left\">\n            <QuestionCircleTwoTone style={{ fontSize: '50px' }} onClick={this.showDrawer} />\n          </Tooltip>\n        </Affix>\n        <Drawer\n          title=\"Send us your query\"\n          onClose={this.onClose}\n          visible={this.state.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <Form layout=\"vertical\"\n            hideRequiredMark\n            onFinish={this.onSubmit}\n            ref={this.formRef}\n          // onFinishFailed={onFinishFailed}\n          >\n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n              </Col>\n              <Col span={24}>\n                <Form.Item\n                  name=\"from\"\n                  label=\"Email\"\n                  rules={[{ required: true, type: 'email', message: 'Please enter user email' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n              </Col>\n              {/* <Col span={24}>\n                <Form.Item\n                  name=\"mobile\"\n                  label=\"Mobile No.\"\n                  rules={[{ type: 'number', min: 10, max: 15 }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n              </Col> */}\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                  name=\"query\"\n                  label=\"Description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'please enter your query',\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={4} placeholder=\"Please enter your query\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <Button\n                  onClick={this.onClose}\n                  htmlType='reset'\n                  style={{ marginRight: 8 }}\n                >\n                  Cancel\n              </Button>\n                <Button\n                  type=\"primary\"\n                  htmlType='submit'\n                >\n                  Submit\n              </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default InquiryForm;"],"sourceRoot":""}